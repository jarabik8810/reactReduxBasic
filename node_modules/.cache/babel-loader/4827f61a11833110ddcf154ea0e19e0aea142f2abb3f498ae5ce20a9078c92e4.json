{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nexport const INCREMENT = 'increment';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement() {},\n    increase() {},\n    toggleCounter() {}\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  ;\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  ;\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","INCREMENT","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","toggleCounter","counterReducer","arguments","length","undefined","action","type","amount","store"],"sources":["/Users/alexanderjarabik/Desktop/reduxReact/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit'\n\nexport const INCREMENT = 'increment';\n\nconst initialState = {\n    counter: 0,\n    showCounter: true\n};\n\ncreateSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) { state.counter++; },\n        decrement() { },\n        increase() { },\n        toggleCounter() { }\n    }\n\n});\n\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === INCREMENT) {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    };\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        }\n    }\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    };\n    if (action.type === 'toggle') {\n        return {\n            counter: state.counter,\n            showCounter: !state.showCounter\n        }\n    }\n    return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACjB,CAAC;AAEDJ,WAAW,CAAC;EACRK,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MAAEA,KAAK,CAACL,OAAO,EAAE;IAAE,CAAC;IACrCM,SAASA,CAAA,EAAG,CAAE,CAAC;IACfC,QAAQA,CAAA,EAAG,CAAE,CAAC;IACdC,aAAaA,CAAA,EAAG,CAAE;EACtB;AAEJ,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCJ,KAAK,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGX,YAAY;EAAA,IAAEc,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,IAAIC,MAAM,CAACC,IAAI,KAAKhB,SAAS,EAAE;IAC3B,OAAO;MACHE,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAAC;EACD,IAAIY,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHd,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGa,MAAM,CAACE,MAAM;MACtCd,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EACA,IAAIY,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHd,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAAC;EACD,IAAIY,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHd,OAAO,EAAEK,KAAK,CAACL,OAAO;MACtBC,WAAW,EAAE,CAACI,KAAK,CAACJ;IACxB,CAAC;EACL;EACA,OAAOI,KAAK;AAChB,CAAC;AAED,MAAMW,KAAK,GAAGpB,WAAW,CAACa,cAAc,CAAC;AAEzC,eAAeO,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}