{"ast":null,"code":"//import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\n//export const INCREMENT = 'increment';\n\n// COUNTER STATE \nconst initialCounterState = {\n  value: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// AUTH STATE\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    logIn(state) {\n      state.isAuthenticated = true;\n    },\n    logOut(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","value","showCounter","counterSlice","name","initialState","reducers","increment","state","counter","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","logIn","logOut","store","reducer","auth","counterActions","actions","authActions"],"sources":["/Users/alexanderjarabik/Desktop/reduxReact/src/store/index.js"],"sourcesContent":["//import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\n\n//export const INCREMENT = 'increment';\n\n\n// COUNTER STATE \nconst initialCounterState = {\n    value: 0,\n    showCounter: true\n};\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) { state.counter++; },\n        decrement(state) { state.counter--; },\n        increase(state, action) { state.counter = state.counter + action.payload; },\n        toggleCounter(state) { state.showCounter = !state.showCounter; }\n    }\n\n});\n\n\n// AUTH STATE\nconst initialAuthState = {\n    isAuthenticated: false\n};\n\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: initialAuthState,\n    reducers: {\n        logIn(state) { state.isAuthenticated = true; },\n        logOut(state) { state.isAuthenticated = false; }\n    }\n});\n\nconst store = configureStore({\n    reducer: {\n        counter: counterSlice.reducer,\n        auth: authSlice\n    }\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;;AAE9D;;AAGA;AACA,MAAMC,mBAAmB,GAAG;EACxBC,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MAAEA,KAAK,CAACC,OAAO,EAAE;IAAE,CAAC;IACrCC,SAASA,CAACF,KAAK,EAAE;MAAEA,KAAK,CAACC,OAAO,EAAE;IAAE,CAAC;IACrCE,QAAQA,CAACH,KAAK,EAAEI,MAAM,EAAE;MAAEJ,KAAK,CAACC,OAAO,GAAGD,KAAK,CAACC,OAAO,GAAGG,MAAM,CAACC,OAAO;IAAE,CAAC;IAC3EC,aAAaA,CAACN,KAAK,EAAE;MAAEA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAAE;EACnE;AAEJ,CAAC,CAAC;;AAGF;AACA,MAAMa,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC1BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEU,gBAAgB;EAC9BT,QAAQ,EAAE;IACNY,KAAKA,CAACV,KAAK,EAAE;MAAEA,KAAK,CAACQ,eAAe,GAAG,IAAI;IAAE,CAAC;IAC9CG,MAAMA,CAACX,KAAK,EAAE;MAAEA,KAAK,CAACQ,eAAe,GAAG,KAAK;IAAE;EACnD;AACJ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EACzBsB,OAAO,EAAE;IACLZ,OAAO,EAAEN,YAAY,CAACkB,OAAO;IAC7BC,IAAI,EAAEL;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMM,cAAc,GAAGpB,YAAY,CAACqB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}